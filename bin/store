require 'io/console'
require './lib/store'
require './lib/store/cart'
require './lib/store/cashier'
require './lib/store/pricing_rule'

# Initialize Store with desired stock and rules
stock = {
  green_tea: {code: 'GR1', name: 'Green Tea', price: 3.11},
  strawberries: {code: 'SR1', name: 'Strawberries', price: 5.00},
  coffee: {code: 'CF1', name: 'Coffee', price: 11.23}
}

rules = [
  Store::PricingRule.new(:gr1, 3.11 * 0.5, {every: 2}),
  Store::PricingRule.new(:sr1, 4.50, {more_than_or_equals_to: 3}),
  Store::PricingRule.new(:cf1, 11.23 * 2/3r, {more_than_or_equals_to: 3})
]

@store = Store.new(rules)
@store.stock = stock

def wait
  puts 'Press any key to continue'
  STDIN.getch
end

def clear_screen
  system('cls') || system('clear')
end

def show_offers
  puts 'Current available offers:'
  puts '  2 x 1 on Green Teas'
  puts '  Each unit of strawberries cost 4.50 € if you buy three or more'
  puts '  Each coffee cost 2/3 of the price if you buy three or more'
  wait
end

def show_cart
  if @store.cart.empty?
    puts 'Your cart is empty.'
  else
    puts 'Items in your cart:'

    @store.cart.items.group_by { |x| x[:code] }.each do |key, items|
      puts "  #{items.size} x #{items[0][:name]}"
    end
  end

  puts ''
  puts "Total: #{@store.total.to_s('F')} €"
end


def ask_user
  puts 'Welcome to our Store'
  puts '--------'
  puts 'Choose an option by entering a number followed by ENTER '
  puts '1 - Add "Green Tea" to cart - 3.11 €'
  puts '2 - Add "Strawberries" to cart - 5.00 €'
  puts '3 - Add "Coffee" to cart - 11.23 €'
  puts '4 - Show available offers'
  puts '5 - Exit store'
end

while true
  clear_screen
  ask_user
  show_cart
  key = STDIN.gets.to_i

  case key
  when 1 then @store.scan(:green_tea)
  when 2 then @store.scan(:strawberries)
  when 3 then @store.scan(:coffee)
  when 4 then show_offers
  when 5 then exit
  else
    puts 'Invalid option'
    wait
  end
end
